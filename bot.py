import os
import random
import asyncio
import threading
from flask import Flask, request
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
TOKEN = "8368265900:AAHOQOeJs57zfpHOSm4594lvFsPm9VKO91c"      # <-- –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –æ—Ç @BotFather
ADMIN_ID = 1078514845             # <-- —Ç–≤–æ–π Telegram ID (–ê–∑–∞—Ç)
REF_LINK = "https://1wilib.life/casino/list/4?p=ly1f"  # <-- —Ç–≤–æ—è –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

app = Flask(__name__)

# === –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ===
reg_button = KeyboardButton("üì≤ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
reg_markup = ReplyKeyboardMarkup(resize_keyboard=True).add(reg_button)

# === –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ===
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    text = (
        "üì≤–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ 1win. –ß—Ç–æ–±—ã –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –Ω—É–∂–Ω–æ —Å–æ–±–ª—é—Å—Ç–∏ –≤–∞–∂–Ω—ã–µ —É—Å–ª–æ–≤–∏—è:\n\n"
        "1Ô∏è‚É£ –ê–∫–∫–∞—É–Ω—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ù–û–í–´–ú! –ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø¬ª –≤—ã –ø–æ–ø–∞–¥–∞–µ—Ç–µ –Ω–∞ —Å—Ç–∞—Ä—ã–π, "
        "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–π—Ç–∏ —Å –Ω–µ–≥–æ –∏ –∑–∞–Ω–æ–≤–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø¬ª, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø–æ –Ω–æ–≤–æ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!\n\n"
        "2Ô∏è‚É£ –ß—Ç–æ–±—ã –±–æ—Ç —Å–º–æ–≥ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞—à—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!\n\n"
        "3Ô∏è‚É£ –í–Ω–µ—Å—Ç–∏ –¥–µ–ø–æ–∑–∏—Ç –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É!\n\n"
        "–ü–æ—Å–ª–µ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–µ–¥—ë—Ç –≤–∞—Å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É ‚úÖ"
    )
    await message.answer(text, reply_markup=reg_markup)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ ===
@dp.message_handler(lambda message: message.text == "üì≤ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
async def register(message: types.Message):
    link = f"{REF_LINK}&tag={message.from_user.id}"
    await message.answer(f"üîó –ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è:\n{link}")

# === Flask: –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–±—ç–∫–æ–≤ –æ—Ç 1Win ===
@app.route('/')
def index():
    return "‚úÖ 1win bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route('/postback', methods=['POST'])
def postback():
    data = request.json
    if not data:
        return "no data"
    
    user_id = data.get("subid")
    amount = data.get("amount")

    if user_id:
        asyncio.run(send_forecast(user_id, amount))
    return "ok"

# === –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ ===
async def send_forecast(user_id, amount=None):
    try:
        folder = "images"
        files = [f for f in os.listdir(folder) if f.endswith((".jpg", ".png"))]
        if not files:
            await bot.send_message(chat_id=ADMIN_ID, text="‚ö†Ô∏è –í –ø–∞–ø–∫–µ images –Ω–µ—Ç —Ñ–æ—Ç–æ!")
            return

        photo_path = os.path.join(folder, random.choice(files))
        caption = "üéØ –¢–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑! –£–¥–∞—á–∏ üçÄ"

        if amount:
            caption += f"\nüí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: {amount}‚Ç∏"

        await bot.send_photo(chat_id=user_id, photo=open(photo_path, "rb"), caption=caption)
        await bot.send_message(chat_id=ADMIN_ID, text=f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")

    except Exception as e:
        await bot.send_message(chat_id=ADMIN_ID, text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–æ–≥–Ω–æ–∑–∞: {e}")

# === –ó–∞–ø—É—Å–∫ Flask –∏ Telegram –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ ===
def run_flask():
    app.run(host="0.0.0.0", port=8080)

def run_telegram():
    executor.start_polling(dp, skip_updates=True)

if __name__ == "__main__":
    threading.Thread(target=run_flask).start()
    run_telegram()
